L11DDF0	EQU	$11DDF0
trap0	EQU	$80
*logic	EQU	$11DDE8
L11DE14	EQU	$11DE14
*res	EQU	$11DDEC
*mous102	EQU	$11DC12
_bufltype	EQU	0
L11DDE4	EQU	$11DDE4
*path	EQU	$11DE95
*newpath	EQU	$11DED5
*folder	EQU	$11DE8F
*pic_low	EQU	$11DF15
*pic_hi	EQU	$11DF1D
*curs_off	EQU	$11DE8C
*sprit	EQU	$11DF25
L11DF32	EQU	$11DF32
L11DF3F	EQU	$11DF3F
L11DF4C	EQU	$11DF4C
L11DCE2	EQU	$11DCE2
L11DF6A	EQU	$11DF6A
L11DF66	EQU	$11DF66
L11DF6C	EQU	$11DF6C
L11DF79	EQU	$11DF79
L11DF59	EQU	$11DF59
*sav_col	EQU	$11DDF4
*color0	EQU	$FF8240
berr	EQU	8
LFC0002	EQU	$FC0002
*dat	EQU	$11DC10
trap6	EQU	$98
LE00002	EQU	$E00002
puns	EQU	1
_buflFATtyp	EQU	2
_bufldrive	EQU	3
*dta	EQU	$11DDB2
L11DDD0	EQU	$11DDD0
*handle	EQU	$11DDEE
L11DDCC	EQU	$11DDCC

TEXT	BRA	start

dat	DC.W	$0102
mouse102
	DC.L	$2740,$E4F,$C76,$26E6,$27A8,$E22,$E8A
	
	DC.W	$0100
	DC.L	$26A0,$E09,$DB0,$2686,$2748,$DDC,$E44
	
	DC.W	$0101
	DC.L	$26A0,$E09,$DB0,$2686,$2748,$DDC,$E44
	
	DC.W	$0104
	DC.L	$2882,$E6B,$C92,$2828,$28EA,$E3E,$EA6
	
	DC.W	$0106
	DC.L	$28C2,$EAB,$CD2,$2868,$292A,$E7E,$EE6
	
	DC.W	-1
	DS.W	14
	DC.W	-1
	
L11DCC6	DC.W
L11DCC8	DC.W
L11DCCA	DC.W
L11DCCC	DC.W
L11DCCE	DC.W
L11DCD0	DC.W
L11DCD2	DC.W
L11DCD4	DC.W
L11DCD6	DC.W
L11DCD8	DC.W
L11DCDA	DC.W
L11DCDC	DC.W
L11DCDE	DC.W
L11DCE0	DC.W
L11DCE2	DC.W
L11DCE4	DC.W
L11DCE6	DC.W
L11DCE8	DC.W
L11DCEA	DC.W
L11DCEC	DC.W
L11DCEE	DC.W
L11DCF0	DC.W
L11DCF2	DC.W
L11DCF4	DC.W
L11DCF6	DC.W
L11DCF8	DC.W
L11DCFA	DC.W
L11DCFC	DC.W
L11DCFE	DC.W
L11DD00	DC.W
L11DD02	DC.W
L11DD04	DC.W
L11DD06	DC.W
L11DD08	DC.W
L11DD0A	DC.W
L11DD0C	DC.W
L11DD0E	DC.W
L11DD10	DC.W
L11DD12	DC.W
L11DD14	DC.W
L11DD16	DC.W
L11DD18	DC.W
L11DD1A	DC.W
L11DD1C	DC.W
L11DD1E	DC.W
L11DD20	DC.W
L11DD22	DC.W
L11DD24	DC.W
L11DD26	DC.W
L11DD28	DC.W
L11DD2A	DC.W
L11DD2C	DC.W
L11DD2E	DC.W
L11DD30	DC.W
L11DD32	DC.W
L11DD34	DC.W
L11DD36	DC.W
L11DD38	DC.W
L11DD3A	DC.W
L11DD3C	DC.W
L11DD3E	DC.W
L11DD40	DC.W
L11DD42	DC.W
L11DD44	DC.W
L11DD46	DC.W
L11DD48	DC.W
L11DD4A	DC.W
L11DD4C	DC.W
L11DD4E	DC.W
L11DD50	DC.W
L11DD52	DC.W
L11DD54	DC.W
L11DD56	DC.W
L11DD58	DC.W
L11DD5A	DC.W
L11DD5C	DC.W
L11DD5E	DC.W
L11DD60	DC.W
L11DD62	DC.W
L11DD64	DC.W
L11DD66	DC.W
L11DD68	DC.W
L11DD6A	DC.W
L11DD6C	DC.W
L11DD6E	DC.W
L11DD70	DC.W
L11DD72	DC.W
L11DD74	DC.W
L11DD76	DC.W
L11DD78	DC.W
L11DD7A	DC.W
L11DD7C	DC.W
L11DD7E	DC.W
L11DD80	DC.W
L11DD82	DC.W
L11DD84	DC.W
L11DD86	DC.W
L11DD88	DC.W
L11DD8A	DC.W
L11DD8C	DC.W
L11DD8E	DC.W
L11DD90	DC.W
L11DD92	DC.W
L11DD94	DC.W
L11DD96	DC.W
L11DD98	DC.W
L11DD9A	DC.W
L11DD9C	DC.W
L11DD9E	DC.W
L11DDA0	DC.W
L11DDA2	DC.W
L11DDA4	DC.W
L11DDA6	DC.W
L11DDA8	DC.W
L11DDAA	DC.W
L11DDAC	DC.W
L11DDAE	DC.W
L11DDB0	DC.W
dta	DC.W
L11DDB4	DC.W
L11DDB6	DC.W
L11DDB8	DC.W
L11DDBA	DC.W
L11DDBC	DC.W
L11DDBE	DC.W
L11DDC0	DC.W
L11DDC2	DC.W
L11DDC4	DC.W
L11DDC6	DC.W
L11DDC8	DC.W
L11DDCA	DC.W
L11DDCC	DC.W
L11DDCE	DC.W
L11DDD0	DC.W
L11DDD2	DC.W
L11DDD4	DC.W
L11DDD6	DC.W
L11DDD8	DC.W
L11DDDA	DC.W
L11DDDC	DC.W
L11DDDE	DC.W
L11DDE0	DC.W
L11DDE2	DC.W
L11DDE4	DC.W
L11DDE6	DC.W
logic	DC.W
L11DDEA	DC.W
res	DC.W
handle	DC.W
L11DDF0	DC.W
L11DDF2	DC.W
sav_col	DC.W
L11DDF6	DC.W
L11DDF8	DC.W
L11DDFA	DC.W
L11DDFC	DC.W
L11DDFE	DC.W
L11DE00	DC.W
L11DE02	DC.W
L11DE04	DC.W
L11DE06	DC.W
L11DE08	DC.W
L11DE0A	DC.W
L11DE0C	DC.W
L11DE0E	DC.W
L11DE10	DC.W
L11DE12	DC.W
L11DE14	DC.W
L11DE16	DC.W
L11DE18	DC.W
L11DE1A	DC.W
L11DE1C	DC.W
L11DE1E	DC.W
L11DE20	DC.W
L11DE22	DC.W
L11DE24	DC.W
L11DE26	DC.W
L11DE28	DC.W
L11DE2A	DC.W
L11DE2C	DC.W
L11DE2E	DC.W
L11DE30	DC.W
L11DE32	DC.W
L11DE34	DC.W
L11DE36	DC.W
L11DE38	DC.W
L11DE3A	DC.W
L11DE3C	DC.W
L11DE3E	DC.W
L11DE40	DC.W
L11DE42	DC.W
L11DE44	DC.W
L11DE46	DC.W
L11DE48	DC.W
L11DE4A	DC.W
L11DE4C	DC.W
L11DE4E	DC.W
L11DE50	DC.W
L11DE52	DC.W
L11DE54	DC.W
L11DE56	DC.W
L11DE58	DC.W
L11DE5A	DC.W
L11DE5C	DC.W
L11DE5E	DC.W
L11DE60	DC.W
L11DE62	DC.W
L11DE64	DC.W
L11DE66	DC.W
L11DE68	DC.W
L11DE6A	DC.W
L11DE6C	DC.W
L11DE6E	DC.W
L11DE70	DC.W
L11DE72	DC.W
L11DE74	DC.W
L11DE76	DC.W
L11DE78	DC.W
L11DE7A	DC.W
L11DE7C	DC.W
L11DE7E	DC.W
L11DE80	DC.W
L11DE82	DC.W
L11DE84	DC.W
L11DE86	DC.W
L11DE88	DC.W


curs_off
	DC.B	27,$66,0
folder	DC.B	"\STOS",0
	
path	ds.b	64
newpath	DS.b	64
piclow	DC.B	"PIC.PI1",0
pichi	DC.B	"PIC.PI3",0
sprit	DC.B	"SPRITE???.BIN",0
	DC.B	"WINDO???.BIN",0
	DC.B	"FLOAT???.BIN",0
	DC.B	"MUSIC???.BIN",0
	DC.B	"BASIC???.BIN",0
	DC.B	"*.EX",0,0
	DC.B	27,"Y",$37,$30,"TOS 1.04",0
	DC.B	27,"Y",$37,$44,"TOS 1.06",0
	
start
	CLR.L	L11DDF0
	MOVEA.L	4(A7),A0
	LEA	trap0(A0),A0
	TST.B	(A0)
	BEQ.S	get_logic
	ADDQ.L	#1,A0
	MOVE.L	A0,L11DDF0

get_logic
	MOVE.W	#3,-(A7)
	TRAP	#$E
	ADDQ.L	#2,A7
	MOVE.L	D0,logic
	PEA	chgvect(PC)
	MOVE.W	#$26,-(A7)
	TRAP	#$E
	ADDQ.L	#6,A7
	LEA	L11DE14(PC),A6
	MOVE.W	#4,-(A7)
	TRAP	#$E
	ADDQ.L	#2,A7
	MOVE.W	D0,res
	LEA	mous102(PC),A5
	MOVEA.L	$C(A5),A0
	MOVEQ	#$2C,D0
L11DFD6:
	MOVE.W	(A0)+,(A6)+
	DBF	D0,bcl1
	MOVEA.L	$10(A5),A0
	MOVEQ	#$B,D0
L11DFE2:
	MOVE.W	(A0)+,(A6)+
	DBF	D0,bcl2
	MOVEA.L	DATA(A5),A0
	MOVE.L	(A0),(A6)+
	MOVE.L	#$11E476,L11DDE4
	BSR	setdta
	CLR.W	-(A7)
	PEA	path(PC)
	MOVE.W	#$47,-(A7)
	TRAP	#1
	ADDQ.L	#8,A7
	TST.W	D0
	BNE	restore
	LEA	path(PC),A0
	LEA	newpath(PC),A1
L11E018:
	MOVE.B	(A0)+,(A1)+
	BNE.S	copy_path
	LEA	path(PC),A0
	TST.B	(A0)
	BNE.S	L11E02A
	MOVE.B	#$5C,(A0)+
	CLR.B	(A0)
L11E02A:
	SUBQ.L	#1,A1
	LEA	folder(PC),A0
L11E030:
	MOVE.B	(A0)+,(A1)+
	BNE.S	bcl3
	LEA	newpath(PC),A0
	BSR	setpath
	BNE	endprg
	CMPI.W	#2,res
	BEQ.S	hires
	LEA	pic_low(PC),A0
	BRA.S	L11E054
L11E050:
	LEA	pic_hi(PC),A0
L11E054:
	BSR	fsfirst
	BNE	L11E142
	BSR	L11E37C
	MOVEA.L	logic(PC),A0
	SUBA.L	#$8000,A0
	MOVE.L	#$7D22,D0
	BSR	f_read
	BSR	close
	DC.W	$A00A
	TST.W	res
	BEQ	L11E0AC
	CMPI.W	#2,res
	BEQ	L11E0AC
	MOVE.W	#0,-(A7)
	MOVE.L	#$FFFFFFFF,-(A7)
	MOVE.L	#$FFFFFFFF,-(A7)
	MOVE.W	#5,-(A7)
	TRAP	#$E
	ADDA.L	#$C,A7
L11E0AC:
	LEA	curs_off(PC),A0
	BSR	print
	MOVE.L	logic(PC),-(A7)
	SUBI.L	#$7FFE,(A7)
	MOVE.W	#6,-(A7)
	TRAP	#$E
	ADDQ.L	#6,A7
	MOVEQ	#1,D6
L11E0C8:
	MOVEA.L	logic(PC),A2
	MOVEA.L	A2,A3
	ADDA.L	#$3DE0,A2
	ADDA.L	#$3E80,A3
	MOVEA.L	A2,A0
	MOVEA.L	A3,A1
	SUBA.L	#$7FDE,A0
	SUBA.L	#$7FDE,A1
	MOVEQ	#$63,D7
	ADDQ.W	#1,D6
	CMP.W	#$64,D6
	BHI	L11E14C
	MOVEQ	#$32,D5
L11E0F8:
	ADD.W	D6,D5
	CMP.W	#$64,D5
	BCS.S	L11E12E
	SUBI.W	#$64,D5
	MOVEM.L	A0-A3,-(A7)
	MOVEQ	#9,D0
L11E10A:
	MOVE.L	(A0)+,(A2)+
	MOVE.L	(A0)+,(A2)+
	MOVE.L	(A0)+,(A2)+
	MOVE.L	(A0)+,(A2)+
	MOVE.L	(A1)+,(A3)+
	MOVE.L	(A1)+,(A3)+
	MOVE.L	(A1)+,(A3)+
	MOVE.L	(A1)+,(A3)+
	DBF	D0,L11E10A
	MOVEM.L	(A7)+,A0-A3
	SUBA.L	#$A0,A2
	ADDA.L	#$A0,A3
L11E12E:
	SUBA.L	#$A0,A0
	ADDA.L	#$A0,A1
	DBF	D7,L11E0F8
	BRA	L11E0C8
L11E142:
	DC.W	$A00A
	LEA	curs_off(PC),A0
	BSR	print
L11E14C:
	LEA	sprit(PC),A0
	BSR	L11E3D2
	LEA	mous102(PC),A3
	JSR	(A0)
	MOVE.L	A0,L11DDE4
	LEA	L11DF32(PC),A0
	BSR	L11E3D2
	LEA	mous102(PC),A3
	JSR	(A0)
	MOVE.L	A0,L11DDE4
	LEA	L11DF3F(PC),A0
	BSR	load
	BNE	L11E186
	LEA	mous102(PC),A3
	JSR	(A0)
L11E186:
	LEA	L11DF4C(PC),A0
	BSR	L11E3D2
	LEA	mous102(PC),A3
	JSR	(A0)
	MOVE.L	A0,L11DDE4
	CLR.W	D7
	LEA	L11DCE2(PC),A6
L11E1A0:
	MOVE.B	D7,L11DF6A
	ADDI.B	#$41,L11DF6A
	LEA	L11DF66(PC),A0
	BSR	fsfirst
	BNE.S	L11E1DC
	LEA	L11DF66(PC),A0
	BSR	L11E3D2
	MOVEM.L	D6-D7/A6,-(A7)
	LEA	mous102(PC),A3
	JSR	(A0)
	MOVE.L	A0,L11DDE4
	MOVEM.L	(A7)+,D6-D7/A6
	MOVE.W	D7,D6
	LSL.W	#2,D6
	MOVE.L	A1,0(A6,D6.W)
L11E1DC:
	ADDQ.W	#1,D7
	CMP.W	#$1A,D7
	BCS.S	L11E1A0
	LEA	L11DF6C(PC),A0
	CMPI.W	#2,res
	BNE.S	L11E1F6
	LEA	L11DF79(PC),A0
L11E1F6:
	BSR	print
	LEA	L11DF59(PC),A0
	BSR	L11E3D2
	MOVE.L	A0,-(A7)
	LEA	path(PC),A0
	BSR	setpath
	MOVEA.L	(A7)+,A6
	MOVE.W	#$25,-(A7)
	TRAP	#$E
	ADDQ.L	#2,A7
	MOVEA.L	logic(PC),A0
	MOVE.W	#$1F3F,D0
L11E21E:
	CLR.L	(A0)+
	DBF	D0,L11E21E
	CMPI.W	#2,res
	BEQ.S	L11E248
	MOVE.W	#1,-(A7)
	MOVE.L	#$FFFFFFFF,-(A7)
	MOVE.L	#$FFFFFFFF,-(A7)
	MOVE.W	#5,-(A7)
	TRAP	#$E
	ADDA.W	#$C,A7
L11E248:
	LEA	L11DCE2(PC),A0
	LEA	mous102(PC),A3
	MOVEA.L	L11DDF0(PC),A4
	CLR.L	D0
	JSR	(A6)
	BRA	restore
L11E25C:
	BSR	close
	LEA	path(PC),A0
	BSR	setpath
L11E268:
	MOVE.W	res(PC),-(A7)
	MOVE.L	logic(PC),-(A7)
	MOVE.L	logic(PC),-(A7)
	MOVE.W	#5,-(A7)
	TRAP	#$E
	ADDA.W	#$C,A7
	LEA	L11DE14(PC),A6
	LEA	mous102(PC),A5
	MOVEA.L	$C(A5),A0
	MOVEQ	#$2C,D0
L11E28C:
	MOVE.W	(A6)+,(A0)+
	DBF	D0,L11E28C
	MOVEA.L	$10(A5),A0
	MOVEQ	#$B,D0
L11E298:
	MOVE.W	(A6)+,(A0)+
	DBF	D0,L11E298
	MOVEA.L	DATA(A5),A0
	MOVE.L	(A6)+,(A5)
	PEA	sav_col(PC)
	MOVE.W	#6,-(A7)
	TRAP	#$E
	ADDQ.L	#6,A7
	MOVE.W	#$25,-(A7)
	TRAP	#$E
	ADDQ.L	#2,A7
	CLR.W	-(A7)
	TRAP	#1
L11E2BC:
	LEA	color0,A0
	LEA	sav_col(PC),A1
	MOVEQ	#$F,D0
L11E2C8:
	MOVE.W	(A0)+,(A1)+
	DBF	D0,sav_bcl
	MOVE.L	berr,D1
	MOVE.L	#$11E31E,berr
	MOVE.L	A7,D2
	MOVE.W	LFC0002,D0
L11E2E6:
	MOVEA.L	D2,A7
	MOVE.L	D1,berr
	LEA	dat(PC),A0
	MOVEQ	#6,D1
L11E2F4:
	CMP.W	(A0)+,D0
	BEQ.S	L11E304
	ADDA.W	#$1C,A0
	DBF	D1,get_tos
	LEA	mous102(PC),A0
L11E304:
	LEA	mous102(PC),A2
	MOVEQ	#6,D0
L11E30A:
	MOVE.L	(A0)+,(A2)+
	DBF	D0,inst_vec
	MOVE.L	#$11E326,D0
	MOVE.L	D0,trap6
	RTS
	MOVE.W	LE00002,D0
	BRA.S	L11E2E6
	CMP.B	#$C,D0
	BEQ.S	L11E332
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	RTE
L11E332:
	MOVE.B	#$30,(A0)
	MOVE.B	#$2E,puns(A0)
	MOVE.B	#$30,_buflFATtype(A0)
	CLR.B	_bufldrive(A0)
	RTE
L11E348:
	MOVE.L	A0,-(A7)
	PEA	dta(PC)
	MOVE.W	#$1A,-(A7)
	TRAP	#1
	ADDQ.L	#6,A7
	MOVEA.L	(A7)+,A0
	RTS
L11E35A:
	MOVE.L	A0,-(A7)
	MOVE.W	#$3B,-(A7)
	TRAP	#1
	ADDQ.L	#6,A7
	TST.W	D0
	RTS
L11E368:
	CLR.W	-(A7)
	MOVE.L	A0,-(A7)
	MOVE.W	#$4E,-(A7)
	TRAP	#1
	ADDQ.L	#8,A7
	LEA	L11DDD0(PC),A0
	TST.W	D0
	RTS
L11E37C:
	CLR.W	-(A7)
	MOVE.L	A0,-(A7)
	MOVE.W	#$3D,-(A7)
	TRAP	#1
	ADDQ.L	#8,A7
	TST.W	D0
	BMI	endprg
	MOVE.W	D0,handle
	RTS
L11E396:
	MOVE.L	L11DDCC,D0
L11E39C:
	MOVE.L	A0,-(A7)
	MOVE.L	D0,-(A7)
	MOVE.W	handle(PC),-(A7)
	MOVE.W	#$3F,-(A7)
	TRAP	#1
	ADDA.L	#$C,A7
	TST.L	D0
	BMI	endprg
	RTS
L11E3B8:
	MOVE.W	handle(PC),-(A7)
	MOVE.W	#$3E,-(A7)
	TRAP	#1
	ADDQ.L	#4,A7
	RTS
L11E3C6:
	MOVE.L	A0,-(A7)
	MOVE.W	#9,-(A7)
	TRAP	#1
	ADDQ.L	#6,A7
	RTS
L11E3D2:
	BSR	load
	BNE	endprg
	RTS
L11E3DC:
	MOVEM.L	D1-D3/A1-A3,-(A7)
	BSR	setdta
	BSR	fsfirst
	BNE	not_found
	MOVE.L	L11DDE4(PC),D3
	ADD.L	L11DDCC(PC),D3
	ADDI.L	#$EA60,D3
	CMP.L	logic(PC),D3
	BCC	endprg
	BSR	L11E37C
	MOVEA.L	L11DDE4(PC),A0
	BSR	L11E396
	BSR	close
	MOVEA.L	L11DDE4(PC),A1
	MOVE.L	_buflFATtype(A1),D0
	ADD.L	6(A1),D0
	ANDI.L	#$FFFFFF,D0
	ADDA.W	#$1C,A1
	MOVEA.L	A1,A2
	MOVE.L	A2,D2
	ADDA.L	D0,A1
	CLR.L	D0
	TST.L	(A1)
	BEQ.S	L11E44E
	ADDA.L	(A1)+,A2
	BRA.S	L11E444
L11E438:
	MOVE.B	(A1)+,D0
	BEQ.S	L11E44E
	CMP.B	#1,D0
	BEQ.S	L11E448
	ADDA.W	D0,A2
L11E444:
	ADD.L	D2,(A2)
	BRA.S	L11E438
L11E448:
	ADDA.W	#$FE,A2
	BRA.S	L11E438
L11E44E:
	MOVEA.L	L11DDE4(PC),A0
	MOVE.L	A0,D0
	ADD.L	L11DDCC(PC),D0
	BTST	#0,D0
	BEQ.S	L11E460
	ADDQ.L	#1,D0
L11E460:
	MOVE.L	D0,L11DDE4
	MOVEM.L	(A7)+,D1-D3/A1-A3
	MOVEQ	#0,D0
	RTS
L11E46E:
	MOVEM.L	(A7)+,D1-D3/A1-A3
	MOVEQ	#1,D0
	RTS
